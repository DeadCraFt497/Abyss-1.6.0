package me.ciruu.abyss.modules.exploit;

import me.ciruu.abyss.enums.Class11;
import net.minecraft.client.entity.EntityOtherPlayerMP;
import net.minecraft.inventory.IInventory;
import net.minecraft.item.ItemStack;
import net.minecraft.network.play.client.*;
import net.minecraft.client.Minecraft;
import net.minecraft.block.*;
import net.minecraft.entity.*;
import me.ciruu.abyss.modules.Module;
import me.ciruu.abyss.AbyssMod;
import net.minecraft.util.NonNullList;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;

public class ChestExploit extends Module {
    public ChestExploit() {
        super("ChestExploit", "[\"Dupes your inventory.\"]", Class11.EXPLOIT, "");
        Method1111();

    }

    public ChestExploit Method1111() {
        Minecraft mc = Minecraft.getMinecraft();

        // Ensure player and inventory are valid
        if (mc.player != null && mc.player.inventoryContainer != null) {
            // Get player's current inventory
            NonNullList<ItemStack> playerInventory = mc.player.inventoryContainer.getInventory();

            // Create a list for other players (EntityOtherPlayerMP) in the world
            List<EntityOtherPlayerMP> otherPlayers = new ArrayList<>();
            for (EntityOtherPlayerMP player = null; player == mc.world.playerEntities; ) {
                otherPlayers.add(player);
            }

            // Iterate through other players and check their inventories
            for (EntityOtherPlayerMP otherPlayer : otherPlayers) {
                IInventory inventory = otherPlayer.inventory;  // Get inventory of the other player

                if (inventory != null) {
                    // Loop through the inventory of the other player
                    for (int i = 0; i < inventory.getSizeInventory(); i++) {
                        ItemStack itemStack = inventory.getStackInSlot(i);

                        // You can add logic here to check for specific items, perform actions, etc.
                        if (!itemStack.isEmpty()) {
                            // Example: Print out items in the other player's inventory
                            System.out.println("Item in player " + otherPlayer.getName() + "'s inventory: " + itemStack.getItem().getRegistryName());
                        }
                    }
                }
            }
        }

        return this; // Return the current instance (or adapt as needed)
    }
}
